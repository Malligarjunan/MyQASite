-@question = Question.new
-form_for(@question, :url => questions_url, :html=>{:class => "form", :id => "ask_question"}) do |f|
  -# TODO: refactor this
  -lang = logged_in? ? current_user.main_language : nil
  -lang = current_group.language ? current_group.language : lang

  %h3
    %label.label
      =current_group.question_prompt || t(".quick_question")
  .columns
    .column_info
      -if logged_in?
        -reputation = current_user.reputation_on(current_group)
        .avatar
          = gravatar(current_user.email.to_s, :size => 64)
        .reputation{:class => class_for_number(reputation)}
          = format_number(reputation)
      -else
        .avatar
          = gravatar("", :size => 64)
    .column_form
      .group
        .pointer
        =f.text_area :title, :class => "text_area", :id => "question_title"

      #tags{:style => "width: 100%"}
        %span#qqsubmit{:style => "width: 20%; float: right"}
          =f.submit t(".ask_question", :default => :"layouts.application.ask_question"), :class => "ask_question"

        -if lang
          = f.hidden_field :language, :value => lang
        -else
          %span.group{:style => "width: 20%"}
            = language_select(f, @question)
        %span.group.as-inline{:style => "width: 50%"}
          = t('.tags', :default => [:"layouts.applications.tags", :"activerecord.attributes.user.tags", "tags"])
          =f.text_field :tags, :class => "text_field autocomplete_for_tags"
        -if lang
          %span{:style => "width: 20%"}
      .clear
  .clear
